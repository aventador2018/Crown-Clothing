{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Github\\\\Crown-Clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{takeLatest,call,put,all}from'redux-saga/effects';import{firestore,convertCollectionsSnapshotToMap}from'../../firebase/firebase.utils';import ShopActionTypes from'./shop.types';import{fetchCollectionsSuccess,fetchCollectionsFailure}from'./shop.actions';export function fetchCollectionsAsync(){var collectionRef,snapshot,collectionsMap;return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return console.log('I am fired');case 2:_context.prev=2;collectionRef=firestore.collection('collections');_context.next=6;return collectionRef.get();case 6:snapshot=_context.sent;_context.next=9;return call(convertCollectionsSnapshotToMap,snapshot);case 9:collectionsMap=_context.sent;_context.next=12;return put(fetchCollectionsSuccess(collectionsMap));case 12:_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);_context.next=18;return put(fetchCollectionsFailure(_context.t0.message));case 18:case\"end\":return _context.stop();}}},_marked,null,[[2,14]]);}export function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["D:/Github/Crown-Clothing/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","console","log","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":"uMAMiBA,qB,iDAaAC,qB,iDAIAC,S,EAvBjB,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,CAAgCC,GAAhC,KAA2C,oBAA3C,CACA,OAASC,SAAT,CAAoBC,+BAApB,KAA2D,+BAA3D,CAEA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAASC,uBAAT,CAAkCC,uBAAlC,KAAiE,gBAAjE,CAEA,MAAO,SAAUX,CAAAA,qBAAV,2LACH,MAAMY,CAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN,CADG,uBAIOC,aAJP,CAIuBP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAJvB,iBAKkB,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CALlB,OAKOC,QALP,+BAMwB,MAAMb,CAAAA,IAAI,CAACI,+BAAD,CAAkCS,QAAlC,CAAV,CANxB,OAMOC,cANP,gCAOC,MAAMb,CAAAA,GAAG,CAACK,uBAAuB,CAACQ,cAAD,CAAxB,CAAT,CAPD,0GASC,MAAMb,CAAAA,GAAG,CAACM,uBAAuB,CAAC,YAAMQ,OAAP,CAAxB,CAAT,CATD,qEAaP,MAAO,SAAUlB,CAAAA,qBAAV,qJACH,MAAME,CAAAA,UAAU,CAACM,eAAe,CAACW,uBAAjB,CAA0CpB,qBAA1C,CAAhB,CADG,wDAIP,MAAO,SAAUE,CAAAA,SAAV,yIACH,MAAMI,CAAAA,GAAG,CAAC,CAACF,IAAI,CAACH,qBAAD,CAAL,CAAD,CAAT,CADG","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport ShopActionTypes from './shop.types';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('I am fired');\r\n\r\n    try {\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\r\n}\r\n\r\nexport function* shopSagas() {\r\n    yield all([call(fetchCollectionsStart)]);\r\n}"]},"metadata":{},"sourceType":"module"}