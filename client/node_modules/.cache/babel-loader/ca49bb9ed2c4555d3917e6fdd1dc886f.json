{"ast":null,"code":"import React,{useEffect}from'react';import{Switch,Route,Redirect}from'react-router-dom';import HomePage from'./pages/homepage/homepage.component';import ShopPage from'./pages/shop/shop.component';import Header from'./components/header/header.component';import SignInAndSignUpPage from'./pages/sign-in-and-sign-up/sign-in-and-sign-up.component';// import { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport{connect}from'react-redux';import{createStructuredSelector}from'reselect';// import { setCurrentUser } from './redux/user/user.actions';\nimport'./App.css';import{selectCurrentUser}from'./redux/user/user.selectors';import CheckoutPage from'./pages/checkout/checkout.component';import{checkUserSession as _checkUserSession}from'./redux/user/user.actions';var App=function App(_ref){var checkUserSession=_ref.checkUserSession,currentUser=_ref.currentUser;useEffect(function(){checkUserSession();},[checkUserSession]);// unsubscribeFromAuth = null;\n/*\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n    checkUserSession();\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }\n  \n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  */return React.createElement(\"div\",null,React.createElement(Header,null),React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/\",component:HomePage}),React.createElement(Route,{path:\"/shop\",component:ShopPage}),React.createElement(Route,{exact:true,path:\"/checkout\",component:CheckoutPage}),React.createElement(Route,{exact:true,path:\"/signin\",render:function render(){return currentUser?React.createElement(Redirect,{to:\"/\"}):React.createElement(SignInAndSignUpPage,null);}})));};var mapStateToProps=createStructuredSelector({currentUser:selectCurrentUser});var mapDispatchToProps=function mapDispatchToProps(dispatch){return{// setCurrentUser: user => dispatch(setCurrentUser(user))\ncheckUserSession:function checkUserSession(){return dispatch(_checkUserSession());}};};export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/Github/Crown-Clothing/client/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","HomePage","ShopPage","Header","SignInAndSignUpPage","connect","createStructuredSelector","selectCurrentUser","CheckoutPage","checkUserSession","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,QAAxB,KAAwC,kBAAxC,CACA,MAAOC,CAAAA,QAAP,KAAqB,qCAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sCAAnB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,2DAAhC,CACA;AACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,wBAAT,KAAyC,UAAzC,CACA;AACA,MAAO,WAAP,CACA,OAASC,iBAAT,KAAkC,6BAAlC,CACA,MAAOC,CAAAA,YAAP,KAAyB,qCAAzB,CACA,OAASC,gBAAgB,GAAhBA,CAAAA,iBAAT,KAAiC,2BAAjC,CAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAuC,IAApCD,CAAAA,gBAAoC,MAApCA,gBAAoC,CAAlBE,WAAkB,MAAlBA,WAAkB,CACjDd,SAAS,CAAC,UAAM,CACdY,gBAAgB,GACjB,CAFQ,CAEN,CAACA,gBAAD,CAFM,CAAT,CAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BA,MACE,gCACE,oBAAC,MAAD,MADF,CAEE,oBAAC,MAAD,MACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAER,QAAjC,EADF,CAEE,oBAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,SAAS,CAAEC,QAA/B,EAFF,CAGE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,WAAlB,CAA8B,SAAS,CAAEM,YAAzC,EAHF,CAIE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,SAFP,CAGE,MAAM,CAAE,wBACNG,CAAAA,WAAW,CACT,oBAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EADS,CAGT,oBAAC,mBAAD,MAJI,EAHV,EAJF,CAFF,CADF,CAmBD,CAvDD,CAyDA,GAAMC,CAAAA,eAAe,CAAGN,wBAAwB,CAAC,CAC/CK,WAAW,CAAEJ,iBADkC,CAAD,CAAhD,CAIA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtC;AACAL,gBAAgB,CAAE,kCAAMK,CAAAA,QAAQ,CAACL,iBAAgB,EAAjB,CAAd,EAFoB,CAAL,EAAnC,CAKA,cAAeJ,CAAAA,OAAO,CAACO,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CH,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\n// import { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n// import { setCurrentUser } from './redux/user/user.actions';\nimport './App.css';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport { checkUserSession } from './redux/user/user.actions';\n\n\nconst App = ({ checkUserSession, currentUser }) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n\n  // unsubscribeFromAuth = null;\n\n  /*\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n    checkUserSession();\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }\n  \n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  */\n\n  return (\n    <div>\n      <Header></Header>\n      <Switch>\n        <Route exact path='/' component={HomePage}></Route>\n        <Route path='/shop' component={ShopPage}></Route>\n        <Route exact path='/checkout' component={CheckoutPage}></Route>\n        <Route \n          exact \n          path='/signin' \n          render={() => \n            currentUser ? (\n              <Redirect to='/' />\n            ) : (\n              <SignInAndSignUpPage />\n            )}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // setCurrentUser: user => dispatch(setCurrentUser(user))\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}